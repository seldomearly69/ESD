version: "3.9"

services:
#################################
# Records of routes [DB]
#################################
  route_records_db:
    container_name: route_records_db
    build:
      context: ./databases/routes_db
      dockerfile: Dockerfile
    env_file: ./databases/routes_db/db.env
    volumes:
      - database-data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5433:5432
#################################
# Saved Routes [Microservice]
#################################
  saved_routes:
    container_name: saved_routes
    build:
      context: ./backend/services/saved_routes
      dockerfile: Dockerfile
    ports:
      - 5001:5001
    depends_on:
      route_records_db:
        condition: service_healthy
    environment:
      DATABASE_URI: 'postgresql://is213:8CRjw8442oS@localhost:5433/is213'
#################################
# user [Microservice]
#################################
  mysql:
    image: mysql
    restart: always 
    environment:
      - MYSQL_DATABASE=mydb
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=sample 
      - MYSQL_PASSWORD=password
    volumes:
      - ./backend/services/user_service/db-dump:/docker-entrypoint-initdb.d
      - database-data:/var/lib/mysql

  user:
    build: ./backend/services/user_service
    depends_on:
      - mysql
    environment:
      - dbURL=mysql+mysqlconnector://sample:password@mysql:3306/mydb
    ports:
      - "5002:5000"
#################################
# FlightsDB [Microservice]
#################################
  # flight:
  #   container_name: flight
  #   build:
  #     context: ./backend/services/flight
  #     dockerfile: Dockerfile
  #   ports:
  #     - 5003:5000
  #   depends_on:
  #     route_records_db:
  #       condition: service_healthy
  #   environment:
  #     DATABASE_URI: 'postgresql://is213:8CRjw8442oS@localhost:5433/is213'

#################################
# JSTemplate [Microservice]
#################################
  jstemplate:
    container_name: JSTemplate
    build:
      context: ./backend/services/JSTemplate
      dockerfile: Dockerfile
    ports:
      - 5005:5005


volumes:
  database-data:


