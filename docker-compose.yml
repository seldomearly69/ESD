version: "3.9"

services:
#################################
# Records of routes [DB]
#################################
  route_records_db:
    container_name: route_records_db
    build:
      context: ./databases/routes_db
      dockerfile: Dockerfile
    env_file: ./databases/routes_db/db.env
    volumes:
      - database-data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5433:5432
#################################
# Saved Routes [Microservice]
#################################
  saved_routes:
    container_name: saved_routes
    build:
      context: ./backend/services/saved_routes
      dockerfile: Dockerfile
    ports:
      - 5001:5001
    depends_on:
      route_records_db:
        condition: service_healthy
    environment:
      DATABASE_URI: 'postgresql://is213:8CRjw8442oS@localhost:5433/is213'
#################################
# user [Microservice]
#################################
  mysql:
    image: mysql
    restart: always 
    environment:
      - MYSQL_DATABASE=mydb
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=sample 
      - MYSQL_PASSWORD=password
    volumes:
      - ./backend/services/user_service/db-dump:/docker-entrypoint-initdb.d
      - database-data:/var/lib/mysql

  user:
    build: ./backend/services/user_service
    depends_on:
      - mysql
    environment:
      - dbURL=mysql+mysqlconnector://sample:password@mysql:3306/mydb
    ports:
      - "5002:5000"

#################################
# HotelSearch [Microservice]
#################################
  hotelSearch:
      container_name: hotelFinder
      build: ./
      ports:
        - 5003:3000
      environment:
        - mongoURL=mongodb://ak:password@mongo:27017/
        - serpapiKey=f3f6e4266e8a55e158eccff91716b1033839ff2368200bf47edd94ef78e8484b

#################################
# HotelDB [Microservice]
#################################
  Hotel:
    container_name: Hotel
    build: backend/hotel
    ports:
      - "5002:5001"
    depends_on:
      - hotel-db
    environment:
      - FLASK_APP=flight.py
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_RUN_PORT=5002
      - DATABASE_URI=mysql+mysqlconnector://root:root@mysql-db:3306/hoteldb

  hotel-db:
    image: mysql:latest
    container_name: mysql-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=hoteldb
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
    volumes:
      - hotel-mysql-data:/var/lib/mysql

#################################
# FlightsDB [Microservice]
#################################
  FlightsDB:
    container_name: Flights
    build: backend/flight
    ports:
      - "5002:5002"
    depends_on:
      - flight-db
    environment:
      - FLASK_APP=flight.py
      - FLASK_RUN_HOST=0.0.0.0
      - FLASK_RUN_PORT=5002
      - DATABASE_URI=mysql+mysqlconnector://root:root@mysql-db:3306/flightdb

  flight-db:
    image: mysql:latest
    container_name: mysql-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=flightdb
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
    volumes:
      - flight-mysql-data:/var/lib/mysql

#################################
# JSTemplate [Microservice]
#################################
  jstemplate:
    container_name: JSTemplate
    build:
      context: ./backend/services/JSTemplate
      dockerfile: Dockerfile
    ports:
      - 5005:5005


volumes:
  database-data:


